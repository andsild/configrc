#!/usr/bin/env ruby
require 'set'
require 'maildir'

profile = ARGV[0]

unless profile
  warn "Must pass the profile name as the first argument"
  exit 1
end

MAILBOX = File.expand_path "~/.mail/#{profile}"

unless File.directory? MAILBOX
  warn "Maildir #{MAILBOX} does not exist"
  exit 1
end

folders = Dir["#{MAILBOX}/*"].map { |path| File.basename(path) } - %w(archive drafts sent trash)

read_ids = folders.flat_map do |name|
  maildir = Maildir.new("#{MAILBOX}/#{name}")
  maildir.list(:cur).map { |message| message.data[/^Message-ID: (.*?)$/i, 1] }
end

read_ids = read_ids.compact.to_set

marked = 0

archive = Maildir.new("#{MAILBOX}/archive")
archive.list(:new).each do |message|
  message_id = message.data[/^Message-ID: (.*?)$/i, 1]
  next unless read_ids.include? message_id

  message.process
  message.seen!
  marked += 1
end

puts "#{marked} messages marked as read"
